package ${package.Controller};


#if(${swagger})
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiOperation;
#end
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import ${r};

## 判断是否包含父类
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} controller
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RequiredArgsConstructor(onConstructor_ = @Autowired)
## swagger相关
#if(${swagger})
@Api(tags = "REST - $!{table.comment}")
#end
## controller注解
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
## 请求地址
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
## 类名及继承判断
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
## 注入服务类
    private final ${table.serviceName} ${table.entityPath}Service;

## 主键类型判断
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
## 主键类型
        #set($idType=${field.propertyType})
## 主键名称
        #set($idName=${field.propertyName})
## 跳出
        #break
    #end
#end
    @PostMapping("/add")
#if(${swagger})
    @ApiOperation(value = "新增")
#end
    public ResponseResult add(@RequestBody ${entity} ${table.entityPath}){
        ${table.entityPath}Service.save(${table.entityPath});
        return ResponseResult.success(${table.entityPath});
    }

    @DeleteMapping("/delete/{${idName}}")
#if(${swagger})
    @ApiOperation(value = "删除")
#end
    public ResponseResult delete(@PathVariable("${idName}")${idType} ${idName}){
        boolean flag = ${table.entityPath}Service.removeById(${idName});
        return ResponseResult.success("删除成功");
    }

    @PutMapping("/update")
#if(${swagger})
    @ApiOperation(value = "修改")
#end
    public ResponseResult update(@RequestBody ${entity} ${table.entityPath}){
        boolean flag = ${table.entityPath}Service.updateById(${table.entityPath});
        return ResponseResult.success(${table.entityPath});
    }

    @GetMapping("/{${idName}}")
#if(${swagger})
    @ApiOperation(value = "单条查询")
#end
    public ResponseResult getOne(@PathVariable("${idName}")${idType} ${idName}){
        return ResponseResult.success(${table.entityPath}Service.getById(${idName}));
    }

    @PostMapping("/findList")
#if(${swagger})
    @ApiOperation(value = "列表查询")
#end
    public ResponseResult findList(@RequestBody ${entity} ${table.entityPath}){
        QueryWrapper queryWrapper = new QueryWrapper();
        return ResponseResult.success(${table.entityPath}Service.list(queryWrapper));
    }

    @PostMapping("/findPage/{current}/{size}")
#if(${swagger})
    @ApiOperation(value = "分页查询")
#end
    public ResponseResult findPage(@PathVariable Long current, @PathVariable Long size, @RequestBody ${entity} ${table.entityPath}){
        QueryWrapper queryWrapper = new QueryWrapper();
        return ResponseResult.success(${table.entityPath}Service.page(new Page<${entity}>(current, size), queryWrapper));
    }

}